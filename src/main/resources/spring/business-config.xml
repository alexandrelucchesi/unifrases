<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="br.com.unifrases.service" />

    <context:component-scan base-package="br.com.unifrases.repository" />

    <!-- **************************************************************** -->
    <!--  TRANSACTIONS CONFIGURATION                                      -->
    <!--  Enables scanning for @Transactional annotations                 -->
    <!-- **************************************************************** -->
    <tx:annotation-driven />

    <bean class="java.net.URI" id="dbUrl">
        <!--
            An environment variable named DATABASE_URL must be created with the contents:
            [database type]://[username]:[password]@[host]:[port]/[database name]
            Eg: postgres://foo:foo@heroku.com:5432/hellodb
        -->
        <!--<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />-->
        <constructor-arg value="postgres://alexandrelucchesi:nopw@localhost:5432/unifrases" />
    </bean>

    <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url"
                  value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
    </bean>

    <!-- Transaction manager for a single JDBC DataSource (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="namedParameterJdbcTemplate"
          class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

</beans>